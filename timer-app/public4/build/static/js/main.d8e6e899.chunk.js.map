{"version":3,"sources":["components/TimerButton/TimerButton.tsx","components/Timer/Timer.tsx","firebase.ts","components/App/App.tsx","index.tsx","swDev.ts"],"names":["TimerButton","props","className","onClick","buttonAction","buttonValue","Timer","useState","ms","s","m","h","time","setTime","interval","setinterval","status","setstatus","updateMs","updateS","updateM","updateH","runTimer","setInterval","clearInterval","Number","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","messaging","App","Notification","requestPermission","then","permission","getToken","currentToken","alert","prompt","console","log","catch","err","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","register","registration","scope"],"mappings":"mQAeeA,G,YAXK,SAACC,GAAD,OAClB,qBAAKC,UAAU,mBAAmBC,QAAS,kBAAMF,EAAMG,gBAAvD,SACE,mBAAGF,UAAU,eAAb,SAA6BD,EAAMI,kBCgExBC,EAjEA,WAAO,IAAD,EACKC,mBAAS,CAAEC,GAAI,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,IADtC,mBACZC,EADY,KACNC,EADM,OAEaN,mBAAS,IAFtB,mBAEZO,EAFY,KAEFC,EAFE,OAGSR,mBAAS,GAHlB,mBAGZS,EAHY,KAGJC,EAHI,KAwBfC,EAAWN,EAAKJ,GAChBW,EAAUP,EAAKH,EACfW,EAAUR,EAAKF,EACfW,EAAUT,EAAKD,EAEbW,EAAW,WAef,OAdiB,MAAbJ,IACFC,IACAD,EAAW,GAEG,KAAZC,IACFC,IACAD,EAAU,GAGI,KAAZC,IACFC,IACAF,EAAU,GAEZD,IACOL,EAAQ,CAAEL,GAAIU,EAAUT,EAAGU,EAAST,EAAGU,EAAST,EAAGU,KAG5D,OACE,sBAAKnB,UAAU,kBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,8BACGU,EAAKF,EAAI,GAAT,WAAkBE,EAAKF,GAAME,EAAKF,EADrC,IAEGE,EAAKH,EAAI,GAAT,WAAkBG,EAAKH,GAAMG,EAAKH,OAIvC,sBAAKP,UAAU,yBAAf,UACE,cAAC,EAAD,CAAcE,aApDD,WACF,IAAXY,IACFM,IACAL,EAAU,GACVF,EAAYQ,YAAYD,EAAU,OAgDQjB,YAAa,UACrD,cAAC,EAAD,CAAaD,aA7CA,WACjBoB,cAAcC,OAAOX,IACrBG,EAAU,IA2CiCZ,YAAa,UACpD,cAAC,EAAD,CAAaD,aAzCA,WACjBoB,cAAcC,OAAOX,IACrBG,EAAU,GACVJ,EAAQ,CAAEL,GAAI,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,KAsCWN,YAAa,iB,gBCpD5DqB,IAASC,cAVM,CACbC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjB,IAAMC,EAAYT,IAASS,YCiBZC,MAtBf,WAEI,ODOFC,aAAaC,oBAAoBC,MAAK,SAACC,GACnCL,EAAUM,WAAWF,MAAK,SAACG,GACzBC,MAAMD,GACNE,OAAO,QAASF,GAChBG,QAAQC,IAAIJ,GAERA,GAGFG,QAAQC,IAAI,2EAGbC,OAAM,SAACC,GACRH,QAAQC,IAAI,6CAA8CE,SCnB9D,sBAAK9C,UAAU,OAAf,UACQ,qBAAIA,UAAU,UAAd,UACQ,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,0BAEhB,qBAAKA,UAAU,YAAf,SACI,cAAC,EAAD,UCnBR+C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SCRlB,kBAAmBC,UACjBA,UAAUC,cAAcC,SAAS,UAAUjB,MAAK,SAASkB,GAEvDZ,QAAQC,IAAI,qDAAsDW,EAAaC,UAC9E,SAASV,GAEVH,QAAQC,IAAI,sCAAuCE,MAGrDH,QAAQC,IAAI,6B","file":"static/js/main.d8e6e899.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TimerButton.css';\r\n\r\nconst TimerButton = (props: any) => (\r\n  <div className=\"button-container\" onClick={() => props.buttonAction()}>\r\n    <p className=\"button-value\">{props.buttonValue}</p>\r\n  </div>\r\n);\r\n\r\nTimerButton.propTypes = {\r\n  buttonAction: PropTypes.func.isRequired,\r\n  buttonValue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TimerButton;","  \r\nimport React, { useState } from \"react\";\r\nimport \"./Timer.css\";\r\nimport TimerButton from \"../TimerButton/TimerButton\";\r\n\r\nconst  Timer = () => {\r\n  const [time, setTime] = useState({ ms: 0, s: 0, m: 0, h: 0 });\r\n  const [interval, setinterval] = useState({});\r\n  const [status, setstatus] = useState(0);\r\n\r\n  const startTimer = () => {\r\n    if (status !== 1) {\r\n      runTimer();\r\n      setstatus(1);\r\n      setinterval(setInterval(runTimer, 10));\r\n    }\r\n  };\r\n\r\n  const pauseTimer = () => {\r\n    clearInterval(Number(interval));\r\n    setstatus(2);\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    clearInterval(Number(interval));\r\n    setstatus(0);\r\n    setTime({ ms: 0, s: 0, m: 0, h: 0 });\r\n  };\r\n\r\n  var updateMs = time.ms;\r\n  var updateS = time.s;\r\n  var updateM = time.m;\r\n  var updateH = time.h;\r\n\r\n  const runTimer = () => {\r\n    if (updateMs === 100) {\r\n      updateS++;\r\n      updateMs = 0;\r\n    }\r\n    if (updateS === 60) {\r\n      updateM++;\r\n      updateS = 0;\r\n    }\r\n\r\n    if (updateM === 60) {\r\n      updateH++;\r\n      updateS = 0;\r\n    }\r\n    updateMs++;\r\n    return setTime({ ms: updateMs, s: updateS, m: updateM, h: updateH });\r\n  };\r\n\r\n  return (\r\n    <div className=\"timer-container\">\r\n      <div className=\"time-display\">\r\n        <p>\r\n          {time.m < 10 ? `0${time.m}` : time.m}:\r\n          {time.s < 10 ? `0${time.s}` : time.s}\r\n          {/* {time.ms < 10 ? `0${time.ms}` : time.ms} */}\r\n        </p>\r\n      </div>\r\n      <div className=\"timer-button-container\">\r\n        <TimerButton  buttonAction={startTimer} buttonValue={\"Start\"} />\r\n        <TimerButton buttonAction={pauseTimer} buttonValue={\"Pause\"} />\r\n        <TimerButton buttonAction={resetTimer} buttonValue={\"Reset\"} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;","import firebase from 'firebase'\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyDnZp0VO_sxxOnQtcf5eGDcsGzita9c_Fc\",\r\n  authDomain: \"timer-app-6f891.firebaseapp.com\",\r\n  projectId: \"timer-app-6f891\",\r\n  storageBucket: \"timer-app-6f891.appspot.com\",\r\n  messagingSenderId: \"476493702093\",\r\n  appId: \"1:476493702093:web:ace1396ff0928aba561a84\",\r\n  measurementId: \"G-1Z2KLVYKEH\"\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\nconst messaging = firebase.messaging();\r\n\r\nexport function configNotification() {\r\n    \r\n  Notification.requestPermission().then((permission) => {\r\n      messaging.getToken().then((currentToken) => {\r\n        alert(currentToken);\r\n        prompt('token', currentToken);\r\n        console.log(currentToken)\r\n        \r\n        if (currentToken) {\r\n        } else {\r\n          // Show permission request.\r\n          console.log('No registration token available. Request permission to generate one.');\r\n\r\n        }\r\n      }).catch((err) => {\r\n        console.log('An error occurred while retrieving token. ', err);\r\n\r\n      });\r\n  \r\n  \r\n  })\r\n\r\n}","import React from 'react';\r\n\r\n//importing timer component\r\nimport Timer from '../Timer/Timer';\r\nimport '../Timer/Timer'\r\nimport './App.css';\r\nimport { configNotification } from '../../firebase';\r\n\r\nfunction App(){\r\n    configNotification()\r\n    return (\r\n    <div className=\"area\" >\r\n            <ul className=\"circles\">\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n            </ul>\r\n    <div className='container'>\r\n        <Timer />\r\n    </div>\r\n    </div >\r\n    )\r\n};\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport {swDev} from './swDev'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nswDev();\n","export function swDev() {\r\n\r\n    if ('serviceWorker' in navigator) {\r\n          navigator.serviceWorker.register('/sw.js').then(function(registration) {\r\n            // Registration was successful\r\n            console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n          }, function(err) {\r\n            // registration failed :(\r\n            console.log('ServiceWorker registration failed: ', err);\r\n          });\r\n      } else {\r\n          console.log(\"ServiceWorker not found\")\r\n      }\r\n\r\n}"],"sourceRoot":""}