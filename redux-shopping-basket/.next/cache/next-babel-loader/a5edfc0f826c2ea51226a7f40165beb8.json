{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_1 = require(\"react\");\n\nconst isServer = true;\n\nexports.default = () => {\n  const mountedInstances = new Set();\n  let state;\n\n  function emitChange(component) {\n    state = component.props.reduceComponentsToState([...mountedInstances], component.props);\n\n    if (component.props.handleStateChange) {\n      component.props.handleStateChange(state);\n    }\n  }\n\n  return class extends react_1.Component {\n    // Used when server rendering\n    static rewind() {\n      const recordedState = state;\n      state = undefined;\n      mountedInstances.clear();\n      return recordedState;\n    }\n\n    constructor(props) {\n      super(props);\n\n      if (isServer) {\n        mountedInstances.add(this);\n        emitChange(this);\n      }\n    }\n\n    componentDidMount() {\n      mountedInstances.add(this);\n      emitChange(this);\n    }\n\n    componentDidUpdate() {\n      emitChange(this);\n    }\n\n    componentWillUnmount() {\n      mountedInstances.delete(this);\n      emitChange(this);\n    }\n\n    render() {\n      return null;\n    }\n\n  };\n};","map":{"version":3,"sources":["D:/Github/redux-shopping-basket/node_modules/next/dist/next-server/lib/side-effect.js"],"names":["Object","defineProperty","exports","value","react_1","require","isServer","default","mountedInstances","Set","state","emitChange","component","props","reduceComponentsToState","handleStateChange","Component","rewind","recordedState","undefined","clear","constructor","add","componentDidMount","componentDidUpdate","componentWillUnmount","delete","render"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAAvB;;AACA,MAAMC,QAAQ,OAAd;;AACAJ,OAAO,CAACK,OAAR,GAAkB,MAAM;AACpB,QAAMC,gBAAgB,GAAG,IAAIC,GAAJ,EAAzB;AACA,MAAIC,KAAJ;;AACA,WAASC,UAAT,CAAoBC,SAApB,EAA+B;AAC3BF,IAAAA,KAAK,GAAGE,SAAS,CAACC,KAAV,CAAgBC,uBAAhB,CAAwC,CAAC,GAAGN,gBAAJ,CAAxC,EAA+DI,SAAS,CAACC,KAAzE,CAAR;;AACA,QAAID,SAAS,CAACC,KAAV,CAAgBE,iBAApB,EAAuC;AACnCH,MAAAA,SAAS,CAACC,KAAV,CAAgBE,iBAAhB,CAAkCL,KAAlC;AACH;AACJ;;AACD,SAAO,cAAcN,OAAO,CAACY,SAAtB,CAAgC;AACnC;AACA,WAAOC,MAAP,GAAgB;AACZ,YAAMC,aAAa,GAAGR,KAAtB;AACAA,MAAAA,KAAK,GAAGS,SAAR;AACAX,MAAAA,gBAAgB,CAACY,KAAjB;AACA,aAAOF,aAAP;AACH;;AACDG,IAAAA,WAAW,CAACR,KAAD,EAAQ;AACf,YAAMA,KAAN;;AACA,UAAIP,QAAJ,EAAc;AACVE,QAAAA,gBAAgB,CAACc,GAAjB,CAAqB,IAArB;AACAX,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ;;AACDY,IAAAA,iBAAiB,GAAG;AAChBf,MAAAA,gBAAgB,CAACc,GAAjB,CAAqB,IAArB;AACAX,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AACDa,IAAAA,kBAAkB,GAAG;AACjBb,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AACDc,IAAAA,oBAAoB,GAAG;AACnBjB,MAAAA,gBAAgB,CAACkB,MAAjB,CAAwB,IAAxB;AACAf,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AACDgB,IAAAA,MAAM,GAAG;AACL,aAAO,IAAP;AACH;;AA5BkC,GAAvC;AA8BH,CAvCD","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst react_1 = require(\"react\");\r\nconst isServer = typeof window === 'undefined';\r\nexports.default = () => {\r\n    const mountedInstances = new Set();\r\n    let state;\r\n    function emitChange(component) {\r\n        state = component.props.reduceComponentsToState([...mountedInstances], component.props);\r\n        if (component.props.handleStateChange) {\r\n            component.props.handleStateChange(state);\r\n        }\r\n    }\r\n    return class extends react_1.Component {\r\n        // Used when server rendering\r\n        static rewind() {\r\n            const recordedState = state;\r\n            state = undefined;\r\n            mountedInstances.clear();\r\n            return recordedState;\r\n        }\r\n        constructor(props) {\r\n            super(props);\r\n            if (isServer) {\r\n                mountedInstances.add(this);\r\n                emitChange(this);\r\n            }\r\n        }\r\n        componentDidMount() {\r\n            mountedInstances.add(this);\r\n            emitChange(this);\r\n        }\r\n        componentDidUpdate() {\r\n            emitChange(this);\r\n        }\r\n        componentWillUnmount() {\r\n            mountedInstances.delete(this);\r\n            emitChange(this);\r\n        }\r\n        render() {\r\n            return null;\r\n        }\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"script"}