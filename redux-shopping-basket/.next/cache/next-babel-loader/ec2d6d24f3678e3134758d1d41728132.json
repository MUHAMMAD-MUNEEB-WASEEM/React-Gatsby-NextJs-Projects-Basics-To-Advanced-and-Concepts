{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nimport { INITIAL_STATE } from \"./state\";\nvar basketSlice = createSlice({\n  name: \"basket\",\n  initialState: INITIAL_STATE,\n  reducers: {\n    add: function add(state, action) {\n      return state.map(function (item) {\n        if (item.id !== action.payload.id) {\n          return item;\n        }\n\n        return _objectSpread({}, item, {\n          added: true\n        });\n      });\n    },\n    remove: function remove(state, action) {\n      return state.map(function (item) {\n        if (item.id !== action.payload.id) {\n          return item;\n        }\n\n        return _objectSpread({}, item, {\n          added: false\n        });\n      });\n    }\n  }\n});\nvar store = configureStore({\n  reducer: basketSlice.reducer\n});\nvar _basketSlice$actions = basketSlice.actions,\n    add = _basketSlice$actions.add,\n    remove = _basketSlice$actions.remove;\nexport { add, remove };\nexport { basketSlice, store };","map":{"version":3,"sources":["F:/Github/shopping-basket-tutorial/store/index.ts"],"names":["createSlice","configureStore","INITIAL_STATE","basketSlice","name","initialState","reducers","add","state","action","map","item","id","payload","added","remove","store","reducer","actions"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AACA,SAASC,aAAT,QAA8B,SAA9B;AAEA,IAAMC,WAAW,GAAGH,WAAW,CAAC;AAC9BI,EAAAA,IAAI,EAAE,QADwB;AAE9BC,EAAAA,YAAY,EAAEH,aAFgB;AAG9BI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,EAAE,aAACC,KAAD,EAAQC,MAAR,EAAmB;AACtB,aAAOD,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI,EAAI;AACvB,YAAIA,IAAI,CAACC,EAAL,KAAYH,MAAM,CAACI,OAAP,CAAeD,EAA/B,EAAmC;AACjC,iBAAOD,IAAP;AACD;;AAED,iCACKA,IADL;AAEEG,UAAAA,KAAK,EAAE;AAFT;AAID,OATM,CAAP;AAUD,KAZO;AAaRC,IAAAA,MAAM,EAAE,gBAACP,KAAD,EAAQC,MAAR,EAAmB;AACzB,aAAOD,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI,EAAI;AACvB,YAAIA,IAAI,CAACC,EAAL,KAAYH,MAAM,CAACI,OAAP,CAAeD,EAA/B,EAAmC;AACjC,iBAAOD,IAAP;AACD;;AAED,iCACKA,IADL;AAEEG,UAAAA,KAAK,EAAE;AAFT;AAID,OATM,CAAP;AAUD;AAxBO;AAHoB,CAAD,CAA/B;AA+BA,IAAME,KAAK,GAAGf,cAAc,CAAC;AAAEgB,EAAAA,OAAO,EAAEd,WAAW,CAACc;AAAvB,CAAD,CAA5B;2BAE+Bd,WAAW,CAACe,O;IAA5BX,G,wBAAAA,G;IAAKQ,M,wBAAAA,M;;AAEpB,SAASZ,WAAT,EAAsBa,KAAtB","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\"\r\nimport { INITIAL_STATE } from \"./state\"\r\n\r\nconst basketSlice = createSlice({\r\n  name: \"basket\",\r\n  initialState: INITIAL_STATE,\r\n  reducers: {\r\n    add: (state, action) => {\r\n      return state.map(item => {\r\n        if (item.id !== action.payload.id) {\r\n          return item\r\n        }\r\n\r\n        return {\r\n          ...item,\r\n          added: true\r\n        }\r\n      })\r\n    },\r\n    remove: (state, action) => {\r\n      return state.map(item => {\r\n        if (item.id !== action.payload.id) {\r\n          return item\r\n        }\r\n\r\n        return {\r\n          ...item,\r\n          added: false\r\n        }\r\n      })\r\n    }\r\n  }\r\n})\r\n\r\nconst store = configureStore({ reducer: basketSlice.reducer })\r\n\r\nexport const { add, remove } = basketSlice.actions\r\n\r\nexport { basketSlice, store }\r\n"]},"metadata":{},"sourceType":"module"}